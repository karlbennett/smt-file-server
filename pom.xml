<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>shiver.me.timbers</groupId>
        <artifactId>smt-parent-pom</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>smt-file-server</artifactId>

    <version>1.0-SNAPSHOT</version>

    <packaging>war</packaging>

    <name>${project.artifactId}</name>

    <description>A simple file server.</description>

    <url>http://karlbennett.github.io/${project.artifactId}/</url>

    <properties>
        <jackson.version>[2.4.1]</jackson.version>
        <spring.version>[4.0.6.RELEASE]</spring.version>
    </properties>

    <build>
        <finalName>files</finalName>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.github.github</groupId>
                <artifactId>site-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <!-- We are using version 2.1 of the tomcat plugin because 2.2 has a bug that causes the executable JAR -->
                <!-- to fail to start up. -->
                <version>2.1</version>
                <configuration>
                    <path>/${project.build.finalName}</path>
                    <!-- This directory configuration is required to tell the tomcat plugin where the WAR files are. -->
                    <!-- Otherwise it expects a ${basedir}/src/main/webapp directory to exist. -->
                    <warSourceDirectory>${basedir}/src/main</warSourceDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>tomcat-exec-war</id>
                        <goals>
                            <goal>exec-war</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <!-- Tell the Maven WAR plugin to ignore the fact that we no longer have a web.xml file. -->
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <!-- Spring MVC for easy request mapping. -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- Code generation library that is required for Spring Java configuration. -->
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
            <version>[3.1]</version>
        </dependency>

        <!-- JEE API so that the servlet interfaces can be accessed. -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>[3.1.0]</version>
            <scope>provided</scope>
        </dependency>

        <!-- The Apache Commons IO API helps simplify file and directory access. -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-io</artifactId>
            <version>[1.3.2]</version>
        </dependency>

        <!-- Jackson JSON object mapping library for converting request and response data. -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- Log4j added to silence the libraries. -->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>[1.2.17]</version>
        </dependency>

        <!-- Test dependencies. -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
        </dependency>

        <!-- Using Joda Time in the tests only to be able to verify the dates are correct with different code. -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>[2.3]</version>
            <scope>test</scope>
        </dependency>

        <!-- Spring test classes that simplify the loading of the Spring context in for JUnit tests. -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <scm>
        <developerConnection>scm:git:git@github.com:karlbennett/${project.artifactId}.git</developerConnection>
    </scm>
</project>
